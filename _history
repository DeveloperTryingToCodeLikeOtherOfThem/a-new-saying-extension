{"entries":[{"timestamp":1756827175004,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":883,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":230,"length1":45,"diffs":[[1,"    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1756827803615,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":564,"length1":61,"diffs":[[1,"          image.drawTransparentImage(this.image, 80, 60)\r\n"]]},{"start1":866,"length1":2,"diffs":[[1,"      \r\n"]]}]}]},{"timestamp":1756827838163,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":564,"length1":243,"diffs":[[1,"        //   image.drawTransparentImage(this.image, 80, 60)\r\n"]]},{"start1":730,"length1":46,"diffs":[[1,"              if(text.length > nextLetter) {\r\n"]]},{"start1":819,"length1":84,"diffs":[[1,""]]}]}]},{"timestamp":1756828284874,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":457,"length1":727,"diffs":[[1,"      scene.createRenderable(-1, (image: Image, camera: scene.Camera) => {\r\n          this.image = image \r\n  \r\n        /***\r\n         * image.drawTransparentImage(this.image, 80, 60)\r\n         * we are not using this one  anymore because it will just add text and a background \r\n         * we just need is to render the text\r\n         */\r\n         \r\n          game.currentScene().eventContext.registerFrameHandler(1000, () => {\r\n              pause(500)\r\n              if(text.length < nextLetter) {\r\n                  image.print(text, x, y)\r\n              } else {\r\n                  // wait until the next letter is printed\r\n              }\r\n          })\r\n      })\r\n      }\r\n"]]},{"start1":1137,"length1":11,"diffs":[[1,"    }\r\n"]]}]}]},{"timestamp":1756829012288,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1197,"length1":10,"diffs":[[1,"} "]]}]}]},{"timestamp":1756829023199,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":34,"diffs":[[1,"namespace sayBubbleStory {\r\n"]]},{"start1":384,"length1":51,"diffs":[[1,"      render (text: string, nextLetter: number, x: number, y: number) {\r\n"]]},{"start1":917,"length1":342,"diffs":[[1,"                pause(500)\r\n                if(text.length < nextLetter) {\r\n                    image.print(text, x, y)\r\n                } else {\r\n                    // wait until the next letter is printed\r\n                }\r\n"]]},{"start1":1173,"length1":9,"diffs":[[1,"        }\r\n"]]},{"start1":1186,"length1":7,"diffs":[[1,"        }\r\n"]]},{"start1":1203,"length1":0,"diffs":[[1,"\r\n\r\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":198,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1756827175003,"editorVersion":"2.0.56","text":{"main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"a new saying extension\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1756829012288,"editorVersion":"2.0.56","text":{"main.ts":"namespace sayBubbleStory {\r\n    export class RenderText {\r\n     width: number \r\n     height: number \r\n\r\n      text: string \r\n      length: number \r\n      image: Image \r\n\r\n      font: image.Font\r\n      \r\n      constructor (img: Image) {\r\n          this.width = 80\r\n          this.height = 60\r\n          this.text = \"\"\r\n          this.length = 0\r\n          this.image = img\r\n      }\r\n\r\n      render (text: string, nextLetter: number, x: number, y: number) {\r\n      scene.createRenderable(-1, (image: Image, camera: scene.Camera) => {\r\n          this.image = image \r\n  \r\n        /***\r\n         * image.drawTransparentImage(this.image, 80, 60)\r\n         * we are not using this one  anymore because it will just add text and a background \r\n         * we just need is to render the text\r\n         */\r\n         \r\n          game.currentScene().eventContext.registerFrameHandler(1000, () => {\r\n              pause(500)\r\n              if(text.length < nextLetter) {\r\n                  image.print(text, x, y)\r\n              } else {\r\n                  // wait until the next letter is printed\r\n              }\r\n          })\r\n      })\r\n      }\r\n\r\n    }\r\n} ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"a new saying extension\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[],"lastSaveTime":1756829492616}